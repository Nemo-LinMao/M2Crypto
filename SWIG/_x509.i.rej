--- SWIG/_x509.i	(revision 659)
+++ SWIG/_x509.i	(working copy)
@@ -159,12 +159,21 @@
 %rename(x509_name_entry_get_data) X509_NAME_ENTRY_get_data;
 extern ASN1_STRING *X509_NAME_ENTRY_get_data(X509_NAME_ENTRY *);
 
-%typemap(in) (CONST unsigned char *, int) { 
+%typemap(in) (CONST unsigned char *, int) {
+#if PY_MAJOR_VERSION >= 3 
+    if (PyBytes_Check($input)) {
+        Py_ssize_t len;
+
+        $1 = PyBytes_AsString($input); 
+        len = PyBytes_Size($input);
+#else
     if (PyString_Check($input)) {
         Py_ssize_t len;
 
         $1 = PyString_AsString($input); 
         len = PyString_Size($input);
+#endif // PY_MAJOR_VERSION >= 3
+
         if (len > INT_MAX) {
             PyErr_SetString(PyExc_ValueError, "object too large");
             return NULL;
@@ -328,7 +337,13 @@
         PyErr_SetString(_x509_err, ERR_reason_error_string(ERR_get_error()));
     }
     else {     
+
+#if PY_MAJOR_VERSION >= 3 
+        ret = PyBytes_FromStringAndSize(buf, len);
+#else
         ret = PyString_FromStringAndSize(buf, len);
+#endif // PY_MAJOR_VERSION >= 3 
+
         OPENSSL_free(buf);
     }
     return ret;
@@ -400,13 +415,23 @@
         return NULL;
     }
     xlen = X509_NAME_get_text_by_NID(name, nid, buf, len);
+
+#if PY_MAJOR_VERSION >= 3 
+    ret = PyBytes_FromStringAndSize(buf, xlen);
+#else
     ret = PyString_FromStringAndSize(buf, xlen);
+#endif // PY_MAJOR_VERSION >= 3 
+
     PyMem_Free(buf);
     return ret;
 }
 
 int x509_name_set_by_nid(X509_NAME *name, int nid, PyObject *obj) {
+#if PY_MAJOR_VERSION >= 3 
+    return X509_NAME_add_entry_by_NID(name, nid, MBSTRING_ASC, PyBytes_AsString(obj), -1, -1, 0);
+#else
     return X509_NAME_add_entry_by_NID(name, nid, MBSTRING_ASC, PyString_AsString(obj), -1, -1, 0);
+#endif // PY_MAJOR_VERSION >= 3 
 }
 
 /* x509_name_add_entry_by_txt */
